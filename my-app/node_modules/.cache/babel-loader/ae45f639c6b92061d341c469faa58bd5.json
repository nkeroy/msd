{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\royng\\\\Desktop\\\\msd assessment\\\\Scenario_1\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      weather: '',\n      temperature: '',\n      weatherData: []\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({\n      date: event.target.value\n    });\n    this.filterDates;\n  } // filterDate(props){\n  //   const listDates = this.weatherData.map((data) => (data.dt_txt.split(\" \")[0] === this.state.date) ? \n  //   <ListItem key={data.dt_txt} value={\n  //     \"Temperature: \" + \n  //     data.main.temp + \n  //     \" | Weather: \" + \n  //     data.weather[0].main +\n  //     \", \" +\n  //     data.weather[0].description\n  //   } /> : \"\"\n  //   );\n  //   return (\n  //     <ul>\n  //       {listDates}\n  //     </ul>\n  //   );\n  // }\n\n\n  filterDates(props) {\n    const data = this.state.weatherData.slice().filter(data => data.dt_txt.split(\" \")[0] === this.state.date);\n    data.map(index => React.createElement(\"li\", {\n      key: index.dt_txt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Temperature: \" + index.main.temp + \" | \" + \"Weather: \" + index.weather[0].main + \", \" + index.weather[0].description));\n  } // handleDateChange(event){\n  //   this.setState({date: event.target.value});\n  //   fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n  //   .then(response => response.json())\n  //   .then(data => this.setState({\n  //     weather: data.weather[0].description,\n  //     temperature: data.main.temp,\n  //   }\n  //   )\n  //   );\n  // }\n  // handleSubmit(event){\n  //   alert(\"You have selected a date\");\n  // }\n  // load singapore weather json into state.weatherData first so that won't have to load it again\n\n\n  componentDidMount() {\n    const city = \"Singapore\";\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\").then(response => response.json()).then(data => this.setState({\n      weatherData: data.list\n    }));\n  }\n\n  render() {\n    return (// <form onSubmit={this.handleSubmit}>\n      React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Please enter a date to see forecasted weather in Singapore:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"(Example: 28-04-2019)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Date (DD-MM-YYYY) :\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"fieldDate\",\n        value: null,\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Current Weather: \", this.state.weather), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Current Temperature: \", this.state.temperature), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Forecasted Weather: \", null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Forecasted Temperature: \", null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\royng\\Desktop\\msd assessment\\Scenario_1\\my-app\\src\\App.js"],"names":["React","App","Component","constructor","props","state","date","weather","temperature","weatherData","handleDateChange","bind","event","setState","target","value","filterDates","data","slice","filter","dt_txt","split","map","index","main","temp","description","componentDidMount","city","fetch","then","response","json","list","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,EADM;AAEXC,MAAAA,OAAO,EAAC,EAFG;AAGXC,MAAAA,WAAW,EAAC,EAHD;AAIXC,MAAAA,WAAW,EAAC;AAJD,KAAb;AAOA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAIDD,EAAAA,gBAAgB,CAACE,KAAD,EAAO;AACrB,SAAKC,QAAL,CAAc;AAACP,MAAAA,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAApB,KAAd;AACA,SAAKC,WAAL;AACD,GAlB6B,CAoB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,EAAAA,WAAW,CAACZ,KAAD,EAAO;AAChB,UAAMa,IAAI,GAAG,KAAKZ,KAAL,CAAWI,WAAX,CAAuBS,KAAvB,GAA+BC,MAA/B,CAAsCF,IAAI,IAAIA,IAAI,CAACG,MAAL,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,KAAKhB,KAAL,CAAWC,IAAvF,CAAb;AACAW,IAAAA,IAAI,CAACK,GAAL,CAASC,KAAK,IAAI;AAAI,MAAA,GAAG,EACrBA,KAAK,CAACH,MADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAId,kBACAG,KAAK,CAACC,IAAN,CAAWC,IADX,GAEA,KAFA,GAGA,WAHA,GAIAF,KAAK,CAAChB,OAAN,CAAc,CAAd,EAAiBiB,IAJjB,GAKA,IALA,GAMAD,KAAK,CAAChB,OAAN,CAAc,CAAd,EAAiBmB,WAVH,CAAlB;AAcD,GAtD6B,CAyD9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACAC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,IAAI,GAAG,WAAb;AACAC,IAAAA,KAAK,CAAC,gHAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMb,IAAI,IAAI,KAAKJ,QAAL,CAAc;AAACJ,MAAAA,WAAW,EAAEQ,IAAI,CAACgB;AAAnB,KAAd,CAFd;AAID;;AAIDC,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7D,2BAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFvB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,KAAK,EAAE,IAA3C;AAAiD,QAAA,QAAQ,EAAE,KAAKxB,gBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAE4F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF5F,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAPF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyB,KAAKL,KAAL,CAAWE,OAApC,CAfF,EAesD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAftD,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA6B,KAAKF,KAAL,CAAWG,WAAxC,CAhBF,EAgB8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhB9D,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA4B,IAA5B,CAnBF,EAmB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnB3C,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAgC,IAAhC,CApBF,EAoB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApB/C;AAFF;AA0BD;;AA/G6B;;AAkHlC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        date:'',\n        weather:'',\n        temperature:'',\n        weatherData:[],\n      }\n\n      this.handleDateChange = this.handleDateChange.bind(this);\n    }\n\n\n    \n    handleDateChange(event){\n      this.setState({date: event.target.value});\n      this.filterDates;\n    }\n\n    // filterDate(props){\n    //   const listDates = this.weatherData.map((data) => (data.dt_txt.split(\" \")[0] === this.state.date) ? \n    //   <ListItem key={data.dt_txt} value={\n    //     \"Temperature: \" + \n    //     data.main.temp + \n    //     \" | Weather: \" + \n    //     data.weather[0].main +\n    //     \", \" +\n    //     data.weather[0].description\n    //   } /> : \"\"\n    //   );\n    //   return (\n    //     <ul>\n    //       {listDates}\n    //     </ul>\n    //   );\n    // }\n\n    filterDates(props){\n      const data = this.state.weatherData.slice().filter(data => data.dt_txt.split(\" \")[0] === this.state.date);\n      data.map(index => <li key={\n          index.dt_txt\n        }> \n        {\n          \"Temperature: \" +\n          index.main.temp +\n          \" | \" +\n          \"Weather: \" + \n          index.weather[0].main +\n          \", \" +\n          index.weather[0].description\n        }\n        </li>\n      ); \n    }\n\n\n    // handleDateChange(event){\n    //   this.setState({date: event.target.value});\n    //   fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n    //   .then(response => response.json())\n    //   .then(data => this.setState({\n    //     weather: data.weather[0].description,\n    //     temperature: data.main.temp,\n    //   }\n    //   )\n    //   );\n    // }\n\n    // handleSubmit(event){\n    //   alert(\"You have selected a date\");\n    // }\n\n    // load singapore weather json into state.weatherData first so that won't have to load it again\n    componentDidMount(){\n      const city = \"Singapore\";\n      fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n      .then(response => response.json())\n      .then(data => this.setState({weatherData: data.list})\n      );\n    }\n\n    \n\n    render() {\n      return (\n        // <form onSubmit={this.handleSubmit}>\n        <form>\n          <label>\n            Please enter a date to see forecasted weather in Singapore:<br></br>\n            (Example: 28-04-2019)<br></br>\n            <br></br>  \n          </label>  \n        \n          <label>\n            Date (DD-MM-YYYY) :<br></br>\n            <input type=\"text\" name=\"fieldDate\" value={null} onChange={this.handleDateChange}></input><br></br>\n            <br></br>\n          </label>\n          {/* <input type=\"submit\" value=\"Submit\" /><br></br><br></br> */}\n          \n\n          <label>Current Weather: {this.state.weather}</label><br></br>\n          <label>Current Temperature: {this.state.temperature}</label><br></br>\n\n          \n          <label>Forecasted Weather: {null}</label><br></br>\n          <label>Forecasted Temperature: {null}</label><br></br>\n        </form>\n\n      );\n    }\n}      \n\nexport default App;"]},"metadata":{},"sourceType":"module"}