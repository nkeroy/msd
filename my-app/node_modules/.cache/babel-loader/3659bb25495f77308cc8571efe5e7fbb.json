{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\royng\\\\Desktop\\\\msd assessment\\\\Scenario_1\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: [],\n      filteredWeatherData: []\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  } // load singapore weather json into state.weatherData first so that won't have to load it again\n\n\n  componentDidMount() {\n    //const city = \"Singapore\";\n    fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\").then(response => response.json()).then(data => this.setState({\n      weatherData: data.list\n    }));\n  }\n\n  handleDateChange(event) {\n    let temp = this.state.weatherData.filter(function (index) {\n      return index.dt_txt.split(\" \")[0] === event.target.value;\n    }); //this.setState({filteredWeatherData: temp});\n\n    this.setState({\n      filteredWeatherData: temp.map(index => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, index.dt_txt + \"--\" + \"Temperature: \" + index.main.temp + \" | \" + \"Weather: \" + index.weather[0].main + \", \" + index.weather[0].description))\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Please enter a date to see forecasted weather in Singapore:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), \"(Example: 2019-04-28)\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Date (YYYY-MM-DD) :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: null,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Forecasted Results: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.filteredWeatherData), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\royng\\Desktop\\msd assessment\\Scenario_1\\my-app\\src\\App.js"],"names":["React","App","Component","constructor","props","state","weatherData","filteredWeatherData","handleDateChange","bind","componentDidMount","fetch","then","response","json","data","setState","list","event","temp","filter","index","dt_txt","split","target","value","map","main","weather","description","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,mBAAmB,EAAE;AAFV,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD,GAR6B,CAU9B;;;AACAC,EAAAA,iBAAiB,GAAE;AACjB;AACAC,IAAAA,KAAK,CAAC,iHAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,WAAW,EAAES,IAAI,CAACE;AAAnB,KAAd,CAFd;AAID;;AAEDT,EAAAA,gBAAgB,CAACU,KAAD,EAAO;AACrB,QAAIC,IAAI,GAAG,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,MAAvB,CAA8B,UAASC,KAAT,EAAgB;AACvD,aAAOA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,MAA+BL,KAAK,CAACM,MAAN,CAAaC,KAAnD;AACC,KAFQ,CAAX,CADqB,CAIrB;;AAEA,SAAKT,QAAL,CAAc;AAACT,MAAAA,mBAAmB,EAAEY,IAAI,CAACO,GAAL,CAASL,KAAK,IAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEA,KAAK,CAACC,MAAN,GACA,IADA,GAEA,eAFA,GAGAD,KAAK,CAACM,IAAN,CAAWR,IAHX,GAIA,KAJA,GAKA,WALA,GAMAE,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiBD,IANjB,GAOA,IAPA,GAQAN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiBC,WATnB,CADkC;AAAtB,KAAd;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7D,2BAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrB,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,IAA1B;AAAgC,MAAA,QAAQ,EAAE,KAAKtB,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAE2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF3E,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbF,EAaqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbrC,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWE,mBAAhB,CAdF,EAc2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAd3C,CADF;AAkBD;;AA5D6B;;AA+DlC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        weatherData: [],\n        filteredWeatherData: [],\n      }\n      this.handleDateChange = this.handleDateChange.bind(this);\n    }\n\n    // load singapore weather json into state.weatherData first so that won't have to load it again\n    componentDidMount(){\n      //const city = \"Singapore\";\n      fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n      .then(response => response.json())\n      .then(data => this.setState({weatherData: data.list})\n      );\n    }\n\n    handleDateChange(event){\n      let temp = this.state.weatherData.filter(function(index) {\n        return index.dt_txt.split(\" \")[0] === event.target.value;\n        });\n      //this.setState({filteredWeatherData: temp});\n      \n      this.setState({filteredWeatherData: temp.map(index => \n        <li>{\n          index.dt_txt +\n          \"--\" +\n          \"Temperature: \" +\n          index.main.temp +\n          \" | \" +\n          \"Weather: \" + \n          index.weather[0].main +\n          \", \" +\n          index.weather[0].description\n        }</li>)\n      }\n      );\n    }\n\n    render() {\n      return (\n        <form>\n          <label>\n            Please enter a date to see forecasted weather in Singapore:<br></br>\n            (Example: 2019-04-28)<br></br>\n            <br></br>  \n          </label>  \n        \n          <label>\n            Date (YYYY-MM-DD) :<br></br>\n            <input type=\"text\" value={null} onChange={this.handleDateChange}></input><br></br>\n            <br></br>\n          </label>\n                  \n          <label>Forecasted Results: </label><br></br>\n          <ul>{this.state.filteredWeatherData}</ul><br></br>\n        </form>\n      );\n    }\n}      \n\nexport default App;"]},"metadata":{},"sourceType":"module"}