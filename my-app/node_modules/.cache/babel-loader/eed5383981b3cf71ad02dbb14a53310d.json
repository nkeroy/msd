{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\royng\\\\Desktop\\\\msd assessment\\\\Scenario_1\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      weather: '',\n      temperature: '',\n      weatherData: fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\").then(response => response.json()).then(data => data.list),\n      filteredWeatherData: []\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({\n      date: event.target.value\n    }); // this.filterDates();\n\n    this.state.filteredWeatherData = this.state.weatherData.map(data => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, index.dt_txt + \"--\" + \"Temperature: \" + index.main.temp + \" | \" + \"Weather: \" + index.weather[0].main + \", \" + index.weather[0].description));\n  } // filterDate(props){\n  //   const listDates = this.weatherData.map((data) => (data.dt_txt.split(\" \")[0] === this.state.date) ? \n  //   <ListItem key={data.dt_txt} value={\n  //     \"Temperature: \" + \n  //     data.main.temp + \n  //     \" | Weather: \" + \n  //     data.weather[0].main +\n  //     \", \" +\n  //     data.weather[0].description\n  //   } /> : \"\"\n  //   );\n  //   return (\n  //     <ul>\n  //       {listDates}\n  //     </ul>\n  //   );\n  // }\n\n\n  filterDates() {\n    const data = this.state.weatherData.filter(data => data.dt_txt.split(\" \")[0] === this.state.date);\n    data.map(index => React.createElement(\"li\", {\n      key: index.dt_txt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Temperature: \" + index.main.temp + \" | \" + \"Weather: \" + index.weather[0].main + \", \" + index.weather[0].description));\n  } // handleDateChange(event){\n  //   this.setState({date: event.target.value});\n  //   fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n  //   .then(response => response.json())\n  //   .then(data => this.setState({\n  //     weather: data.weather[0].description,\n  //     temperature: data.main.temp,\n  //   }\n  //   )\n  //   );\n  // }\n  // handleSubmit(event){\n  //   alert(\"You have selected a date\");\n  // }\n  // load singapore weather json into state.weatherData first so that won't have to load it again\n  // componentDidMount(){\n  //   const city = \"Singapore\";\n  //   fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n  //   .then(response => response.json())\n  //   .then(data => this.setState({weatherData: data.list})\n  //   );\n  // }\n\n\n  render() {\n    return (// <form onSubmit={this.handleSubmit}>\n      React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Please enter a date to see forecasted weather in Singapore:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \"(Example: 28-04-2019)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Date (DD-MM-YYYY) :\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"fieldDate\",\n        value: null,\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Forecasted Results: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.state.filteredWeatherData))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\royng\\Desktop\\msd assessment\\Scenario_1\\my-app\\src\\App.js"],"names":["React","App","Component","constructor","props","state","date","weather","temperature","weatherData","fetch","then","response","json","data","list","filteredWeatherData","handleDateChange","bind","event","setState","target","value","map","index","dt_txt","main","temp","description","filterDates","filter","split","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        date:'',\n        weather:'',\n        temperature:'',\n        weatherData: fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n        .then(response => response.json())\n        .then(data => data.list),\n        filteredWeatherData: [],\n      }\n\n      this.handleDateChange = this.handleDateChange.bind(this);\n    }\n\n\n    \n    handleDateChange(event){\n      this.setState({date: event.target.value});\n      // this.filterDates();\n      this.state.filteredWeatherData = this.state.weatherData.map(data => \n        <li>{\n          index.dt_txt +\n          \"--\" +\n          \"Temperature: \" +\n          index.main.temp +\n          \" | \" +\n          \"Weather: \" + \n          index.weather[0].main +\n          \", \" +\n          index.weather[0].description\n        }</li>);\n    }\n\n    // filterDate(props){\n    //   const listDates = this.weatherData.map((data) => (data.dt_txt.split(\" \")[0] === this.state.date) ? \n    //   <ListItem key={data.dt_txt} value={\n    //     \"Temperature: \" + \n    //     data.main.temp + \n    //     \" | Weather: \" + \n    //     data.weather[0].main +\n    //     \", \" +\n    //     data.weather[0].description\n    //   } /> : \"\"\n    //   );\n    //   return (\n    //     <ul>\n    //       {listDates}\n    //     </ul>\n    //   );\n    // }\n\n    filterDates(){\n      const data = this.state.weatherData.filter(data => data.dt_txt.split(\" \")[0] === this.state.date);\n      data.map(index => <li key={\n          index.dt_txt\n        }> \n        {\n          \"Temperature: \" +\n          index.main.temp +\n          \" | \" +\n          \"Weather: \" + \n          index.weather[0].main +\n          \", \" +\n          index.weather[0].description\n        }\n        </li>\n      ); \n    }\n\n\n    // handleDateChange(event){\n    //   this.setState({date: event.target.value});\n    //   fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n    //   .then(response => response.json())\n    //   .then(data => this.setState({\n    //     weather: data.weather[0].description,\n    //     temperature: data.main.temp,\n    //   }\n    //   )\n    //   );\n    // }\n\n    // handleSubmit(event){\n    //   alert(\"You have selected a date\");\n    // }\n\n    // load singapore weather json into state.weatherData first so that won't have to load it again\n    // componentDidMount(){\n    //   const city = \"Singapore\";\n    //   fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n    //   .then(response => response.json())\n    //   .then(data => this.setState({weatherData: data.list})\n    //   );\n    // }\n\n    \n\n    render() {\n      return (\n        // <form onSubmit={this.handleSubmit}>\n        <form>\n          <label>\n            Please enter a date to see forecasted weather in Singapore:<br></br>\n            (Example: 28-04-2019)<br></br>\n            <br></br>  \n          </label>  \n        \n          <label>\n            Date (DD-MM-YYYY) :<br></br>\n            <input type=\"text\" name=\"fieldDate\" value={null} onChange={this.handleDateChange}></input><br></br>\n            <br></br>\n          </label>\n          {/* <input type=\"submit\" value=\"Submit\" /><br></br><br></br> */}\n          \n\n          {/* <label>Current Weather: {this.state.weather}</label><br></br>\n          <label>Current Temperature: {this.state.temperature}</label><br></br> */}\n\n          \n          <label>Forecasted Results: </label><br></br>\n          <ul>{this.state.filteredWeatherData}</ul>\n\n        </form>\n\n      );\n    }\n}      \n\nexport default App;"]},"metadata":{},"sourceType":"module"}