{"ast":null,"code":"// src/reducers/index.js\nimport { ADD_ACTIVITY, DELETE_ACTIVITY } from '../constants/action-types';\nconst initialState = {\n  //activities: []\n  activities: [{\n    id: 1,\n    title: \"Learning React\",\n    description: \"how to learn react\",\n    date: \"30/4/2019\"\n  }]\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ACTIVITY) {\n    return Object.assign({}, {\n      activities: state.activities.concat([action.payload])\n    });\n  } else if (action.type === DELETE_ACTIVITY) {\n    let indexToBeDeleted = null;\n    state.activites.map((activity, index) => activity.id === action.payload.id ? indexToBeDeleted = index : null);\n    return state.activities.slice(0, indexToBeDeleted).concat(state.slice(indexToBeDeleted + 1)); // let copy = Object.assign({},{\n    //     activites: state.activities\n    // });\n    // return copy.filter(activity => activity.id !== action.payload.id)\n    // for (const [index,value] of state.entries){\n    //     if(value.id === action.payload.id){\n    //     return state.slice(0,index).concat(state.slice(index+1));\n    //     }\n    // }\n  } else {\n    return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:\\Users\\royng\\Desktop\\msd assessment\\Scenario_3\\my_app\\src\\js\\reducers\\index.js"],"names":["ADD_ACTIVITY","DELETE_ACTIVITY","initialState","activities","id","title","description","date","rootReducer","state","action","type","Object","assign","concat","payload","indexToBeDeleted","activites","map","activity","index","slice"],"mappings":"AAAA;AACA,SAAQA,YAAR,EAAsBC,eAAtB,QAA4C,2BAA5C;AAEA,MAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,UAAU,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,gBAAZ;AAA6BC,IAAAA,WAAW,EAAC,oBAAzC;AAA8DC,IAAAA,IAAI,EAAC;AAAnE,GAAD;AAFK,CAArB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAACP,YAA3B,EAAyCQ,MAAzC,EAAgD;AAC5C,MAAIA,MAAM,CAACC,IAAP,KAAgBX,YAApB,EAAkC;AAC9B,WAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB;AACpBV,MAAAA,UAAU,EAAEM,KAAK,CAACN,UAAN,CAAiBW,MAAjB,CAAwB,CAACJ,MAAM,CAACK,OAAR,CAAxB;AADQ,KAAjB,CAAP;AAGH,GAJD,MAIO,IAAIL,MAAM,CAACC,IAAP,KAAgBV,eAApB,EAAqC;AACxC,QAAIe,gBAAgB,GAAG,IAAvB;AACAP,IAAAA,KAAK,CAACQ,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,QAAD,EAAUC,KAAV,KAAqBD,QAAQ,CAACf,EAAT,KAAgBM,MAAM,CAACK,OAAP,CAAeX,EAAhC,GAAsCY,gBAAgB,GAAGI,KAAzD,GAAiE,IAAzG;AACA,WAAOX,KAAK,CAACN,UAAN,CAAiBkB,KAAjB,CAAuB,CAAvB,EAAyBL,gBAAzB,EAA2CF,MAA3C,CAAkDL,KAAK,CAACY,KAAN,CAAYL,gBAAgB,GAAC,CAA7B,CAAlD,CAAP,CAHwC,CAMxC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH,GAhBM,MAgBA;AACH,WAAOP,KAAP;AACH;AACJ;;AAED,eAAeD,WAAf","sourcesContent":["// src/reducers/index.js\r\nimport {ADD_ACTIVITY, DELETE_ACTIVITY} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n    //activities: []\r\n    activities: [{id:1,title:\"Learning React\",description:\"how to learn react\",date:\"30/4/2019\"}]\r\n}\r\n\r\nfunction rootReducer(state=initialState, action){\r\n    if (action.type === ADD_ACTIVITY) {\r\n        return Object.assign({},{\r\n            activities: state.activities.concat([action.payload])\r\n        });\r\n    } else if (action.type === DELETE_ACTIVITY) {\r\n        let indexToBeDeleted = null;\r\n        state.activites.map((activity,index) => (activity.id === action.payload.id) ? indexToBeDeleted = index : null);\r\n        return state.activities.slice(0,indexToBeDeleted).concat(state.slice(indexToBeDeleted+1)); \r\n\r\n\r\n        // let copy = Object.assign({},{\r\n        //     activites: state.activities\r\n        // });\r\n        // return copy.filter(activity => activity.id !== action.payload.id)\r\n        \r\n        // for (const [index,value] of state.entries){\r\n        //     if(value.id === action.payload.id){\r\n        //     return state.slice(0,index).concat(state.slice(index+1));\r\n        //     }\r\n        // }\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}