{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\royng\\\\Desktop\\\\msd assessment\\\\Scenario_1\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '2019-04-21',\n      weatherData: [],\n      filteredWeatherData: []\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({\n      date: event.target.value\n    }); // this.filterDates();\n\n    let temp = this.state.weatherData.filter(function (index) {\n      return index.dt_txt.split(\" \")[0] === '2019-04-29';\n    });\n    this.setState({\n      filteredWeatherData: temp\n    });\n    this.setState({\n      filteredWeatherData: temp.map(index => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, index.dt_txt + \"--\" + \"Temperature: \" + index.main.temp + \" | \" + \"Weather: \" + index.weather[0].main + \", \" + index.weather[0].description))\n    });\n  } // handleSubmit(event){\n  //   alert(\"You have selected a date\");\n  // }\n  // load singapore weather json into state.weatherData first so that won't have to load it again\n\n\n  componentDidMount() {\n    //const city = \"Singapore\";\n    fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\").then(response => response.json()).then(data => this.setState({\n      weatherData: data.list\n    }));\n  }\n\n  render() {\n    return (// <form onSubmit={this.handleSubmit}>\n      React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Please enter a date to see forecasted weather in Singapore:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \"(Example: 2019-04-28)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Date (YYYY-MM-DD) :\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"fieldDate\",\n        value: this.state.date,\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Forecasted Results: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.filteredWeatherData), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\royng\\Desktop\\msd assessment\\Scenario_1\\my-app\\src\\App.js"],"names":["React","App","Component","constructor","props","state","date","weatherData","filteredWeatherData","handleDateChange","bind","event","setState","target","value","temp","filter","index","dt_txt","split","map","main","weather","description","componentDidMount","fetch","then","response","json","data","list","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        date:'2019-04-21',\n        weatherData: [],\n        filteredWeatherData: [],\n      }\n\n      this.handleDateChange = this.handleDateChange.bind(this);\n    }\n\n    handleDateChange(event){\n      this.setState({date: event.target.value});\n      // this.filterDates();\n      let temp = this.state.weatherData.filter(function(index) {\n        return (index.dt_txt.split(\" \")[0] === '2019-04-29');\n        });\n      this.setState({filteredWeatherData: temp});\n      \n      this.setState({filteredWeatherData: temp.map(index => \n        <li>{\n          index.dt_txt +\n          \"--\" +\n          \"Temperature: \" +\n          index.main.temp +\n          \" | \" +\n          \"Weather: \" + \n          index.weather[0].main +\n          \", \" +\n          index.weather[0].description\n        }</li>)\n      }\n      );\n    }\n\n    // handleSubmit(event){\n    //   alert(\"You have selected a date\");\n    // }\n\n    // load singapore weather json into state.weatherData first so that won't have to load it again\n    componentDidMount(){\n      //const city = \"Singapore\";\n      fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=Singapore&units=metric&APPID=d5fc7ebe276faf34c819f53c5660d7eb\")\n      .then(response => response.json())\n      .then(data => this.setState({weatherData: data.list})\n      );\n    }\n\n    \n\n    render() {\n      return (\n        // <form onSubmit={this.handleSubmit}>\n        <form>\n          <label>\n            Please enter a date to see forecasted weather in Singapore:<br></br>\n            (Example: 2019-04-28)<br></br>\n            <br></br>  \n          </label>  \n        \n          <label>\n            Date (YYYY-MM-DD) :<br></br>\n            <input type=\"text\" name=\"fieldDate\" value={this.state.date} onChange={this.handleDateChange}></input><br></br>\n            <br></br>\n          </label>\n          {/* <input type=\"submit\" value=\"Submit\" /><br></br><br></br> */}\n                    \n          <label>Forecasted Results: </label><br></br>\n          <ul>{this.state.filteredWeatherData}</ul><br></br>\n        </form>\n      );\n    }\n}      \n\nexport default App;"]},"metadata":{},"sourceType":"module"}